generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  directUrl            = env("DIRECT_URL")
  referentialIntegrity = "prisma"
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(20)
  posts Post[]
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String
  content    String   @db.Text
  createdAt  DateTime @default(now())
  post_id    Int
  categories Category @relation(fields: [post_id], references: [id])
}

model GalleryCategory {
  id            Int          @id @default(autoincrement())
  name          String       @unique @db.VarChar(20)
  categoryPosts GalleyPost[]
}

model GalleyPost {
  id              Int             @id @default(autoincrement())
  title           String
  imgUrl          String          @db.VarChar(16000)
  createdAt       DateTime        @default(now())
  gpost_id        Int
  galleryCategory GalleryCategory @relation(fields: [gpost_id], references: [id])
}

model GuestBookPost {
  id        Int                @id @default(autoincrement())
  createdAt DateTime           @default(now())
  author    String             @db.VarChar(12)
  email     String
  name      String             @db.VarChar(30)
  post      String             @db.VarChar(1000)
  isPrivate Boolean
  comments  GuestBookComment[]
}

model GuestBookComment {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  author        String         @db.VarChar(12)
  email         String
  name          String         @db.VarChar(30)
  isPrivate     Boolean
  comment       String         @db.VarChar(300)
  comment_id    Int?
  guestbookpost GuestBookPost? @relation(fields: [comment_id], references: [id])
}

model GuestList {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String
  email     String
}

model Tag {
  id  Int    @id @default(autoincrement())
  tag String @unique @db.VarChar(20)
}

model PostToTag {
  A Int
  B Int

  @@unique([A, B], map: "_PostToTag_AB_unique")
  @@index([B], map: "_PostToTag_B_index")
  @@map("_PostToTag")
}

model baa8382_497e_5600_80d2_ff3404e50ecf_20221231060956_vrepl {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  author     String   @db.VarChar(12)
  email      String
  isPrivate  Boolean
  comment    String   @db.VarChar(300)
  comment_id Int
  name       String

  @@map("_7baa8382_497e_5600_80d2_ff3404e50ecf_20221231060956_vrepl")
}

model ea6e01a8_888d_5e86_bdad_f414a0c5e562_20221231065800_vrepl {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  author     String   @db.VarChar(12)
  email      String   @db.VarChar(30)
  isPrivate  Boolean
  comment    String   @db.VarChar(300)
  comment_id Int
  name       String   @db.VarChar(30)

  @@map("_ea6e01a8_888d_5e86_bdad_f414a0c5e562_20221231065800_vrepl")
}
